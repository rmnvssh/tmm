{"name": "test_get_routine", "status": "broken", "statusDetails": {"message": "pydantic_core._pydantic_core.ValidationError: 1 validation error for Routine\ndays\n  Input should be a valid list [type=list_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.7/v/list_type", "trace": "@allure.feature('Routine')\n    @allure.story('Get routine')\n    def test_get_routine():\n        with allure.step('Create Routine'):\n            headers = {\n                \"Authorization\": f\"Bearer {login_token()['accessToken']}\",\n                \"Accept\": \"*/*\",\n            }\n            new_routine = create_routine()\n        with allure.step('Get Routine'):\n            r = requests.get(\n                f\"{TARPS_SERVICE_URL}routines/{new_routine['id']}\", headers=headers\n            )\n            response = Response(r)\n            print(response)\n>           response.assert_status_code(200).validate(Routine)\n\ntests/test_routine.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsrc/baseclasses/response.py:17: in validate\n    schema.parse_obj(self.response_json)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncls = <class 'src.schemas.routine.Routine'>, obj = {'days': None, 'description': 'testing', 'id': 463, 'isEnded': False, ...}\n\n    @classmethod\n    @typing_extensions.deprecated('The `parse_obj` method is deprecated; use `model_validate` instead.', category=None)\n    def parse_obj(cls: type[Model], obj: Any) -> Model:  # noqa: D102\n        warnings.warn(\n            'The `parse_obj` method is deprecated; use `model_validate` instead.', category=PydanticDeprecatedSince20\n        )\n>       return cls.model_validate(obj)\nE       pydantic_core._pydantic_core.ValidationError: 1 validation error for Routine\nE       days\nE         Input should be a valid list [type=list_type, input_value=None, input_type=NoneType]\nE           For further information visit https://errors.pydantic.dev/2.7/v/list_type\n\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/pydantic/main.py:1118: ValidationError"}, "steps": [{"name": "Create Routine", "status": "passed", "start": 1717842905070, "stop": 1717842905368}, {"name": "Get Routine", "status": "broken", "statusDetails": {"message": "pydantic_core._pydantic_core.ValidationError: 1 validation error for Routine\ndays\n  Input should be a valid list [type=list_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.7/v/list_type\n", "trace": "  File \"/Users/alya/shit/tmm/tests/test_routine.py\", line 26, in test_get_routine\n    response.assert_status_code(200).validate(Routine)\n  File \"/Users/alya/shit/tmm/src/baseclasses/response.py\", line 17, in validate\n    schema.parse_obj(self.response_json)\n  File \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/pydantic/main.py\", line 1118, in parse_obj\n    return cls.model_validate(obj)\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/pydantic/main.py\", line 551, in model_validate\n    return cls.__pydantic_validator__.validate_python(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"}, "start": 1717842905368, "stop": 1717842905426}], "start": 1717842905070, "stop": 1717842905429, "uuid": "83c6bb93-12b5-4922-9b52-cc31c0ff5ccf", "historyId": "f3006051eedc1bec0684339174f1394c", "testCaseId": "f3006051eedc1bec0684339174f1394c", "fullName": "tests.test_routine#test_get_routine", "labels": [{"name": "feature", "value": "Routine"}, {"name": "story", "value": "Get routine"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_routine"}, {"name": "host", "value": "Air-makbuk.Dlink"}, {"name": "thread", "value": "46047-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_routine"}]}