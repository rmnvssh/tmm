{"name": "test_create_routine", "status": "failed", "statusDetails": {"message": "AssertionError: assert None == [2, 3]\n +  where [2, 3] = <built-in method get of dict object at 0x1050aab80>('days')\n +    where <built-in method get of dict object at 0x1050aab80> = {'days': [2, 3], 'description': 'testing', 'routineFrequency': 'ONCE', 'timeEnd': '2024-06-04T12:18:33.718', ...}.get", "trace": "@allure.feature('Routine')\n    @allure.story('Create routine')\n    def test_create_routine():\n        with allure.step('Create Routine'):\n            headers = {\n                \"Authorization\": f\"Bearer {login_token()['accessToken']}\",\n                \"Accept\": \"*/*\",\n            }\n            r = requests.post(\n                f\"{TARPS_SERVICE_URL}routines\", json=valid_routine, headers=headers\n            )\n            response = Response(r)\n            print(response)\n            response.assert_status_code(200).validate(Routine)\n        with allure.step('Check Routine'):\n            assert r.json()[\"title\"] == valid_routine.get(\"title\")\n            assert r.json()[\"description\"] == valid_routine.get(\"description\")\n            assert r.json()[\"timeStart\"] == valid_routine.get(f\"timeStart\")\n            assert r.json()[\"timeEnd\"] == valid_routine.get(\"timeEnd\")\n            assert r.json()[\"routineFrequency\"] == valid_routine.get(\"routineFrequency\")\n>           assert r.json()[\"days\"] == valid_routine.get(\"days\")\nE           AssertionError: assert None == [2, 3]\nE            +  where [2, 3] = <built-in method get of dict object at 0x1050aab80>('days')\nE            +    where <built-in method get of dict object at 0x1050aab80> = {'days': [2, 3], 'description': 'testing', 'routineFrequency': 'ONCE', 'timeEnd': '2024-06-04T12:18:33.718', ...}.get\n\ntests/test_routine.py:51: AssertionError"}, "steps": [{"name": "Create Routine", "status": "passed", "start": 1717845594153, "stop": 1717845594275}, {"name": "Check Routine", "status": "failed", "statusDetails": {"message": "AssertionError: assert None == [2, 3]\n +  where [2, 3] = <built-in method get of dict object at 0x1050aab80>('days')\n +    where <built-in method get of dict object at 0x1050aab80> = {'days': [2, 3], 'description': 'testing', 'routineFrequency': 'ONCE', 'timeEnd': '2024-06-04T12:18:33.718', ...}.get\n", "trace": "  File \"/Users/alya/shit/tmm/tests/test_routine.py\", line 51, in test_create_routine\n    assert r.json()[\"days\"] == valid_routine.get(\"days\")\n"}, "start": 1717845594275, "stop": 1717845594276}], "start": 1717845594153, "stop": 1717845594279, "uuid": "5303f872-c1f1-41a4-a25d-d1ccf66daad5", "historyId": "61f850af932a5aa3edb59fb8ab665e10", "testCaseId": "61f850af932a5aa3edb59fb8ab665e10", "fullName": "tests.test_routine#test_create_routine", "labels": [{"name": "feature", "value": "Routine"}, {"name": "story", "value": "Create routine"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_routine"}, {"name": "host", "value": "Air-makbuk.Dlink"}, {"name": "thread", "value": "48241-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_routine"}]}